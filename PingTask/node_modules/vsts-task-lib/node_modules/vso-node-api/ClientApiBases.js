// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
var Q = require('q');
var restm = require('./RestClient');
var httpm = require('./HttpClient');
var vsom = require('./VsoClient');
var ClientApiBase = (function () {
    function ClientApiBase(baseUrl, handlers, userAgent) {
        this.baseUrl = baseUrl;
        this.httpClient = new httpm.HttpClient(userAgent, handlers);
        this.restClient = new restm.RestClient(this.httpClient);
        this.vsoClient = new vsom.VsoClient(baseUrl, this.restClient);
        this.userAgent = userAgent;
    }
    ClientApiBase.prototype.setUserAgent = function (userAgent) {
        this.userAgent = userAgent;
        this.httpClient.userAgent = userAgent;
    };
    ClientApiBase.prototype.connect = function (onResult) {
        this.restClient.getJson(this.vsoClient.resolveUrl('/_apis/connectionData'), "", null, null, onResult);
    };
    return ClientApiBase;
})();
exports.ClientApiBase = ClientApiBase;
var QClientApiBase = (function () {
    function QClientApiBase(baseUrl, handlers, api) {
        this.api = new api(baseUrl, handlers);
    }
    QClientApiBase.prototype.connect = function () {
        var defer = Q.defer();
        this.api.connect(function (err, statusCode, obj) {
            if (err) {
                err.statusCode = statusCode;
                defer.reject(err);
            }
            else {
                defer.resolve(obj);
            }
        });
        return defer.promise;
    };
    return QClientApiBase;
})();
exports.QClientApiBase = QClientApiBase;
