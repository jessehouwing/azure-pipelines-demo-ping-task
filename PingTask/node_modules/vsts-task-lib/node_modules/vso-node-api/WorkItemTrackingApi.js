/*
* ---------------------------------------------------------
* Copyright(C) Microsoft Corporation. All rights reserved.
* ---------------------------------------------------------
*
* ---------------------------------------------------------
* Generated file, DO NOT EDIT
* ---------------------------------------------------------
*/
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
/// <reference path="../node/node.d.ts"/>
/// <reference path="../q/Q.d.ts"/>
var Q = require('q');
var basem = require('./ClientApiBases');
var VSSInterfaces = require("./interfaces/common/VSSInterfaces");
var WorkItemTrackingInterfaces = require("./interfaces/WorkItemTrackingInterfaces");
var WorkItemTrackingApi = (function (_super) {
    __extends(WorkItemTrackingApi, _super);
    function WorkItemTrackingApi(baseUrl, handlers) {
        _super.call(this, baseUrl, handlers, 'node-WorkItemTracking-api');
    }
    WorkItemTrackingApi.prototype.createAttachment = function (customHeaders, contentStream, fileName, uploadType, onResult) {
        var _this = this;
        var routeValues = {};
        var queryValues = {
            fileName: fileName,
            uploadType: uploadType
        };
        customHeaders = customHeaders || {};
        customHeaders["Content-Type"] = "application/octet-stream";
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "e07b5fa4-1499-494d-a496-64b860fd64ff", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.AttachmentReference, responseIsCollection: false };
            _this.restClient.uploadStream('POST', url, apiVersion, contentStream, customHeaders, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getAttachmentContent = function (id, fileName, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            fileName: fileName
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "e07b5fa4-1499-494d-a496-64b860fd64ff", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseIsCollection: false };
            _this.httpClient.getStream(url, apiVersion, "application/octet-stream", onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getAttachmentZip = function (id, fileName, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            fileName: fileName
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "e07b5fa4-1499-494d-a496-64b860fd64ff", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseIsCollection: false };
            _this.httpClient.getStream(url, apiVersion, "application/zip", onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getRootNodes = function (project, depth, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        var queryValues = {
            '$depth': depth
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a70579d1-f53a-48ee-a5be-7be8659023b9", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemClassificationNode, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.createOrUpdateClassificationNode = function (postedNode, project, structureGroup, path, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            structureGroup: structureGroup,
            path: path
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "5a172953-1b41-49d3-840a-33f79c3ce89f", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemClassificationNode, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemClassificationNode, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, postedNode, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.deleteClassificationNode = function (project, structureGroup, path, reclassifyId, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            structureGroup: structureGroup,
            path: path
        };
        var queryValues = {
            '$reclassifyId': reclassifyId
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "5a172953-1b41-49d3-840a-33f79c3ce89f", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseIsCollection: false };
            _this.restClient.delete(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode);
        });
    };
    WorkItemTrackingApi.prototype.getClassificationNode = function (project, structureGroup, path, depth, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            structureGroup: structureGroup,
            path: path
        };
        var queryValues = {
            '$depth': depth
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "5a172953-1b41-49d3-840a-33f79c3ce89f", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemClassificationNode, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.updateClassificationNode = function (postedNode, project, structureGroup, path, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            structureGroup: structureGroup,
            path: path
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "5a172953-1b41-49d3-840a-33f79c3ce89f", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemClassificationNode, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemClassificationNode, responseIsCollection: false };
            _this.restClient.update(url, apiVersion, postedNode, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getField = function (field, onResult) {
        var _this = this;
        var routeValues = {
            field: field
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemField, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getFields = function (onResult) {
        var _this = this;
        var routeValues = {};
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "b51fd764-e5c2-4b9b-aaf7-3395cf4bdd94", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemField, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getHistory = function (id, top, skip, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            '$top': top,
            '$skip': skip
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "f74eba29-47a1-4152-9381-84040aced527", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemHistory, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getHistoryById = function (id, revisionNumber, onResult) {
        var _this = this;
        var routeValues = {
            id: id,
            revisionNumber: revisionNumber
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "f74eba29-47a1-4152-9381-84040aced527", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemHistory, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.createQuery = function (postedQuery, project, query, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            query: query
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a67d190c-c41f-424b-814d-0e906f659301", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.QueryHierarchyItem, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.QueryHierarchyItem, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, postedQuery, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.deleteQuery = function (project, query, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            query: query
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a67d190c-c41f-424b-814d-0e906f659301", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseIsCollection: false };
            _this.restClient.delete(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode);
        });
    };
    WorkItemTrackingApi.prototype.getQueries = function (project, expand, depth, includeDeleted, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        var queryValues = {
            '$expand': expand,
            '$depth': depth,
            '$includeDeleted': includeDeleted
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a67d190c-c41f-424b-814d-0e906f659301", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.QueryHierarchyItem, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getQuery = function (project, query, expand, depth, includeDeleted, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            query: query
        };
        var queryValues = {
            '$expand': expand,
            '$depth': depth,
            '$includeDeleted': includeDeleted
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a67d190c-c41f-424b-814d-0e906f659301", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.QueryHierarchyItem, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.updateQuery = function (queryUpdate, project, query, undeleteDescendants, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            query: query
        };
        var queryValues = {
            '$undeleteDescendants': undeleteDescendants
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a67d190c-c41f-424b-814d-0e906f659301", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.QueryHierarchyItem, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.QueryHierarchyItem, responseIsCollection: false };
            _this.restClient.update(url, apiVersion, queryUpdate, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getRevision = function (id, revisionNumber, expand, onResult) {
        var _this = this;
        var routeValues = {
            id: id,
            revisionNumber: revisionNumber
        };
        var queryValues = {
            '$expand': expand
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a00c85a5-80fa-4565-99c3-bcd2181434bb", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getRevisions = function (id, top, skip, expand, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            '$top': top,
            '$skip': skip,
            '$expand': expand
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a00c85a5-80fa-4565-99c3-bcd2181434bb", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.evaluateRulesOnField = function (ruleEngineInput, onResult) {
        var _this = this;
        var routeValues = {};
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "1a3a1536-dca6-4509-b9c3-dd9bb2981506", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.FieldsToEvaluate, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, ruleEngineInput, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode);
        });
    };
    WorkItemTrackingApi.prototype.getUpdate = function (id, updateNumber, onResult) {
        var _this = this;
        var routeValues = {
            id: id,
            updateNumber: updateNumber
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "6570bf97-d02c-4a91-8d93-3abe9895b1a9", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemUpdate, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getUpdates = function (id, top, skip, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            '$top': top,
            '$skip': skip
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "6570bf97-d02c-4a91-8d93-3abe9895b1a9", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemUpdate, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.queryByWiql = function (wiql, teamContext, onResult) {
        var _this = this;
        var project = teamContext.projectId || teamContext.project;
        var team = teamContext.teamId || teamContext.team;
        var routeValues = {
            project: project,
            team: team
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "1a9c53f7-f243-4447-b110-35ef023636e4", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.Wiql, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemQueryResult, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, wiql, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.queryById = function (id, teamContext, onResult) {
        var _this = this;
        var project = teamContext.projectId || teamContext.project;
        var team = teamContext.teamId || teamContext.team;
        var routeValues = {
            project: project,
            team: team,
            id: id
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "a02355f5-5f8a-4671-8e32-369d23aac83d", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemQueryResult, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getReportingLinks = function (project, types, watermark, startDateTime, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        var queryValues = {
            types: types && types.join(","),
            watermark: watermark,
            startDateTime: startDateTime
        };
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "b5b5b6d0-0308-40a1-b3f4-b9bb3c66878f", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.ReportingWorkItemLinksBatch, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getRelationType = function (relation, onResult) {
        var _this = this;
        var routeValues = {
            relation: relation
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "f5d33bc9-5b49-4a3c-a9bd-f3cd46dd2165", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemRelationType, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getRelationTypes = function (onResult) {
        var _this = this;
        var routeValues = {};
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "f5d33bc9-5b49-4a3c-a9bd-f3cd46dd2165", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemRelationType, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.readReportingRevisionsGet = function (project, fields, types, watermark, startDateTime, includeIdentityRef, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        var queryValues = {
            fields: fields && fields.join(","),
            types: types && types.join(","),
            watermark: watermark,
            startDateTime: startDateTime,
            includeIdentityRef: includeIdentityRef
        };
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "f828fe59-dd87-495d-a17c-7a8d6211ca6c", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.ReportingWorkItemRevisionsBatch, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.readReportingRevisionsPost = function (filter, project, watermark, startDateTime, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        var queryValues = {
            watermark: watermark,
            startDateTime: startDateTime
        };
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "f828fe59-dd87-495d-a17c-7a8d6211ca6c", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.ReportingWorkItemRevisionsFilter, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.ReportingWorkItemRevisionsBatch, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, filter, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.createWorkItem = function (customHeaders, document, type, validateOnly, bypassRules, onResult) {
        var _this = this;
        var routeValues = {};
        var queryValues = {
            type: type,
            validateOnly: validateOnly,
            bypassRules: bypassRules
        };
        customHeaders = customHeaders || {};
        customHeaders["Content-Type"] = "application/json-patch+json";
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: VSSInterfaces.TypeInfo.JsonPatchDocument, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, document, customHeaders, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItem = function (id, fields, asOf, expand, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            fields: fields && fields.join(","),
            asOf: asOf,
            '$expand': expand
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItems = function (ids, fields, asOf, expand, onResult) {
        var _this = this;
        var routeValues = {};
        var queryValues = {
            ids: ids && ids.join(","),
            fields: fields && fields.join(","),
            asOf: asOf,
            '$expand': expand
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.updateWorkItem = function (customHeaders, document, id, validateOnly, bypassRules, onResult) {
        var _this = this;
        var routeValues = {
            id: id
        };
        var queryValues = {
            validateOnly: validateOnly,
            bypassRules: bypassRules
        };
        customHeaders = customHeaders || {};
        customHeaders["Content-Type"] = "application/json-patch+json";
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "72c7ddf8-2cdc-4f60-90cd-ab71c14a399b", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: VSSInterfaces.TypeInfo.JsonPatchDocument, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: false };
            _this.restClient.update(url, apiVersion, document, customHeaders, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItemTemplate = function (project, type, fields, asOf, expand, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            type: type
        };
        var queryValues = {
            fields: fields,
            asOf: asOf,
            '$expand': expand
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "62d3d110-0047-428c-ad3c-4fe872c91c74", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.updateWorkItemTemplate = function (customHeaders, document, project, type, validateOnly, bypassRules, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            type: type
        };
        var queryValues = {
            validateOnly: validateOnly,
            bypassRules: bypassRules
        };
        customHeaders = customHeaders || {};
        customHeaders["Content-Type"] = "application/json-patch+json";
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "62d3d110-0047-428c-ad3c-4fe872c91c74", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: VSSInterfaces.TypeInfo.JsonPatchDocument, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItem, responseIsCollection: false };
            _this.restClient.update(url, apiVersion, document, customHeaders, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItemTypeCategories = function (project, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "9b9f5734-36c8-415e-ba67-f83b45c31408", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemTypeCategory, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItemTypeCategory = function (project, category, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            category: category
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "9b9f5734-36c8-415e-ba67-f83b45c31408", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemTypeCategory, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItemType = function (project, type, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            type: type
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "7c8d7a76-4a09-43e8-b5df-bd792f4ac6aa", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemType, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getWorkItemTypes = function (project, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        this.vsoClient.getVersioningData("2.2-preview.2", "wit", "7c8d7a76-4a09-43e8-b5df-bd792f4ac6aa", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemType, responseIsCollection: true };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.getDependentFields = function (project, type, field, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            type: type,
            field: field
        };
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "bd293ce5-3d25-4192-8e67-e8092e879efb", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.FieldDependentRule, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.exportWorkItemTypeDefinition = function (project, type, exportGlobalLists, onResult) {
        var _this = this;
        var routeValues = {
            project: project,
            type: type
        };
        var queryValues = {
            exportGlobalLists: exportGlobalLists
        };
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "8637ac8b-5eb6-4f90-b3f7-4f2ff576a459", routeValues, queryValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemTypeTemplate, responseIsCollection: false };
            _this.restClient.getJson(url, apiVersion, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    WorkItemTrackingApi.prototype.updateWorkItemTypeDefinition = function (updateModel, project, onResult) {
        var _this = this;
        var routeValues = {
            project: project
        };
        this.vsoClient.getVersioningData("2.2-preview.1", "wit", "8637ac8b-5eb6-4f90-b3f7-4f2ff576a459", routeValues)
            .then(function (versioningData) {
            var url = versioningData.requestUrl;
            var apiVersion = versioningData.apiVersion;
            var serializationData = { requestTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.WorkItemTypeTemplateUpdateModel, responseTypeMetadata: WorkItemTrackingInterfaces.TypeInfo.ProvisioningResult, responseIsCollection: false };
            _this.restClient.create(url, apiVersion, updateModel, null, serializationData, onResult);
        })
            .fail(function (error) {
            onResult(error, error.statusCode, null);
        });
    };
    return WorkItemTrackingApi;
})(basem.ClientApiBase);
exports.WorkItemTrackingApi = WorkItemTrackingApi;
var QWorkItemTrackingApi = (function (_super) {
    __extends(QWorkItemTrackingApi, _super);
    function QWorkItemTrackingApi(baseUrl, handlers) {
        _super.call(this, baseUrl, handlers, WorkItemTrackingApi);
    }
    QWorkItemTrackingApi.prototype.createAttachment = function (customHeaders, contentStream, fileName, uploadType) {
        var deferred = Q.defer();
        this.api.createAttachment(customHeaders, contentStream, fileName, uploadType, function (err, statusCode, attachment) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(attachment);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getAttachmentContent = function (id, fileName) {
        var deferred = Q.defer();
        this.api.getAttachmentContent(id, fileName, function (err, statusCode, attachment) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(attachment);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getAttachmentZip = function (id, fileName) {
        var deferred = Q.defer();
        this.api.getAttachmentZip(id, fileName, function (err, statusCode, attachment) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(attachment);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getRootNodes = function (project, depth) {
        var deferred = Q.defer();
        this.api.getRootNodes(project, depth, function (err, statusCode, classificationNodes) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(classificationNodes);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.createOrUpdateClassificationNode = function (postedNode, project, structureGroup, path) {
        var deferred = Q.defer();
        this.api.createOrUpdateClassificationNode(postedNode, project, structureGroup, path, function (err, statusCode, classificationNode) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(classificationNode);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.deleteClassificationNode = function (project, structureGroup, path, reclassifyId) {
        var deferred = Q.defer();
        this.api.deleteClassificationNode(project, structureGroup, path, reclassifyId, function (err, statusCode) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(null);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getClassificationNode = function (project, structureGroup, path, depth) {
        var deferred = Q.defer();
        this.api.getClassificationNode(project, structureGroup, path, depth, function (err, statusCode, classificationNode) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(classificationNode);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.updateClassificationNode = function (postedNode, project, structureGroup, path) {
        var deferred = Q.defer();
        this.api.updateClassificationNode(postedNode, project, structureGroup, path, function (err, statusCode, classificationNode) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(classificationNode);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getField = function (field) {
        var deferred = Q.defer();
        this.api.getField(field, function (err, statusCode, field) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(field);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getFields = function () {
        var deferred = Q.defer();
        this.api.getFields(function (err, statusCode, fields) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(fields);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getHistory = function (id, top, skip) {
        var deferred = Q.defer();
        this.api.getHistory(id, top, skip, function (err, statusCode, history) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(history);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getHistoryById = function (id, revisionNumber) {
        var deferred = Q.defer();
        this.api.getHistoryById(id, revisionNumber, function (err, statusCode, history) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(history);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.createQuery = function (postedQuery, project, query) {
        var deferred = Q.defer();
        this.api.createQuery(postedQuery, project, query, function (err, statusCode, querie) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(querie);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.deleteQuery = function (project, query) {
        var deferred = Q.defer();
        this.api.deleteQuery(project, query, function (err, statusCode) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(null);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getQueries = function (project, expand, depth, includeDeleted) {
        var deferred = Q.defer();
        this.api.getQueries(project, expand, depth, includeDeleted, function (err, statusCode, queries) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(queries);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getQuery = function (project, query, expand, depth, includeDeleted) {
        var deferred = Q.defer();
        this.api.getQuery(project, query, expand, depth, includeDeleted, function (err, statusCode, querie) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(querie);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.updateQuery = function (queryUpdate, project, query, undeleteDescendants) {
        var deferred = Q.defer();
        this.api.updateQuery(queryUpdate, project, query, undeleteDescendants, function (err, statusCode, querie) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(querie);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getRevision = function (id, revisionNumber, expand) {
        var deferred = Q.defer();
        this.api.getRevision(id, revisionNumber, expand, function (err, statusCode, revision) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(revision);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getRevisions = function (id, top, skip, expand) {
        var deferred = Q.defer();
        this.api.getRevisions(id, top, skip, expand, function (err, statusCode, revisions) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(revisions);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.evaluateRulesOnField = function (ruleEngineInput) {
        var deferred = Q.defer();
        this.api.evaluateRulesOnField(ruleEngineInput, function (err, statusCode) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(null);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getUpdate = function (id, updateNumber) {
        var deferred = Q.defer();
        this.api.getUpdate(id, updateNumber, function (err, statusCode, update) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(update);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getUpdates = function (id, top, skip) {
        var deferred = Q.defer();
        this.api.getUpdates(id, top, skip, function (err, statusCode, updates) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(updates);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.queryByWiql = function (wiql, teamContext) {
        var deferred = Q.defer();
        this.api.queryByWiql(wiql, teamContext, function (err, statusCode, wiql) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(wiql);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.queryById = function (id, teamContext) {
        var deferred = Q.defer();
        this.api.queryById(id, teamContext, function (err, statusCode, wiql) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(wiql);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getReportingLinks = function (project, types, watermark, startDateTime) {
        var deferred = Q.defer();
        this.api.getReportingLinks(project, types, watermark, startDateTime, function (err, statusCode, workItemLink) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemLink);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getRelationType = function (relation) {
        var deferred = Q.defer();
        this.api.getRelationType(relation, function (err, statusCode, workItemRelationType) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemRelationType);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getRelationTypes = function () {
        var deferred = Q.defer();
        this.api.getRelationTypes(function (err, statusCode, workItemRelationTypes) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemRelationTypes);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.readReportingRevisionsGet = function (project, fields, types, watermark, startDateTime, includeIdentityRef) {
        var deferred = Q.defer();
        this.api.readReportingRevisionsGet(project, fields, types, watermark, startDateTime, includeIdentityRef, function (err, statusCode, workItemRevision) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemRevision);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.readReportingRevisionsPost = function (filter, project, watermark, startDateTime) {
        var deferred = Q.defer();
        this.api.readReportingRevisionsPost(filter, project, watermark, startDateTime, function (err, statusCode, workItemRevision) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemRevision);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.createWorkItem = function (customHeaders, document, type, validateOnly, bypassRules) {
        var deferred = Q.defer();
        this.api.createWorkItem(customHeaders, document, type, validateOnly, bypassRules, function (err, statusCode, workItem) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItem);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItem = function (id, fields, asOf, expand) {
        var deferred = Q.defer();
        this.api.getWorkItem(id, fields, asOf, expand, function (err, statusCode, workItem) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItem);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItems = function (ids, fields, asOf, expand) {
        var deferred = Q.defer();
        this.api.getWorkItems(ids, fields, asOf, expand, function (err, statusCode, workItems) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItems);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.updateWorkItem = function (customHeaders, document, id, validateOnly, bypassRules) {
        var deferred = Q.defer();
        this.api.updateWorkItem(customHeaders, document, id, validateOnly, bypassRules, function (err, statusCode, workItem) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItem);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItemTemplate = function (project, type, fields, asOf, expand) {
        var deferred = Q.defer();
        this.api.getWorkItemTemplate(project, type, fields, asOf, expand, function (err, statusCode, workItem) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItem);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.updateWorkItemTemplate = function (customHeaders, document, project, type, validateOnly, bypassRules) {
        var deferred = Q.defer();
        this.api.updateWorkItemTemplate(customHeaders, document, project, type, validateOnly, bypassRules, function (err, statusCode, workItem) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItem);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItemTypeCategories = function (project) {
        var deferred = Q.defer();
        this.api.getWorkItemTypeCategories(project, function (err, statusCode, workItemTypeCategories) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemTypeCategories);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItemTypeCategory = function (project, category) {
        var deferred = Q.defer();
        this.api.getWorkItemTypeCategory(project, category, function (err, statusCode, workItemTypeCategorie) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemTypeCategorie);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItemType = function (project, type) {
        var deferred = Q.defer();
        this.api.getWorkItemType(project, type, function (err, statusCode, workItemType) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemType);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getWorkItemTypes = function (project) {
        var deferred = Q.defer();
        this.api.getWorkItemTypes(project, function (err, statusCode, workItemTypes) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemTypes);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.getDependentFields = function (project, type, field) {
        var deferred = Q.defer();
        this.api.getDependentFields(project, type, field, function (err, statusCode, workItemTypesField) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemTypesField);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.exportWorkItemTypeDefinition = function (project, type, exportGlobalLists) {
        var deferred = Q.defer();
        this.api.exportWorkItemTypeDefinition(project, type, exportGlobalLists, function (err, statusCode, workItemTypeTemplate) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemTypeTemplate);
            }
        });
        return deferred.promise;
    };
    QWorkItemTrackingApi.prototype.updateWorkItemTypeDefinition = function (updateModel, project) {
        var deferred = Q.defer();
        this.api.updateWorkItemTypeDefinition(updateModel, project, function (err, statusCode, workItemTypeTemplate) {
            if (err) {
                err.statusCode = statusCode;
                deferred.reject(err);
            }
            else {
                deferred.resolve(workItemTypeTemplate);
            }
        });
        return deferred.promise;
    };
    return QWorkItemTrackingApi;
})(basem.QClientApiBase);
exports.QWorkItemTrackingApi = QWorkItemTrackingApi;
